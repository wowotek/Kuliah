from DES_erlangga import *

# Pembuatan External Key
key = "Aureliag".lower()  # -> di lowercase kan
print("--------------------------------------------------------------------------------------")
print("                                START OF KEY SECTION")
print("--------------------------------------------------------------------------------------")
print("                                     \""+key+"\"")
print("                                         |")
print("                                        \|/")
print("                                         v")
key = encodeUTF8(key)  # -> diubah kedalam binary berdasarkan utf-8 encoding
print("          "+key)
print("                                         |")
print("                                        \|/")
print("                                         v")
print("                                      [PC-1]")
print("                                         |")
print("                        |----------------+---------------|")
print("                        |                                |")
print("                       \|/                              \|/")
print("                        v                                v")
pc1 = permuted_choice1(key)
print("        {}".format(pc1))
print("                       C0                               C0")
L0 = left_shift(pc1[0])
R0 = left_shift(pc1[1])
print("                  <Left Shift>                     <Left Shift>")
print("        ['{}', '{}']".format(L0, R0))
print("          |            C1                               C1           |")
k1 = permuted_choice2(L0+R0)
print("          |             |                                |           |")
print("          |             |----------------|---------------|           |")
print("          |                              |                           |")
print("          |                           [PC-2]                         |")
print("          |                              |                           |")
print("          |     ("+k1+")   |")
print("          |                              |                           |")
print("(K1) <----)------------------------------|                           |")
print("          |                                                          |")
print("         \|/                                                        \|/")
print("          v                                                          v")
print("        ['{}', '{}']".format(L0, R0))
print("                       C1                               C1")
L1 = left_shift(L0)
R1 = left_shift(R0)
print("                  <Left Shift>                     <Left Shift>")
print("        ['{}', '{}']".format(L1, R1))
print("                       C1                               C1")
k2 = permuted_choice2(L1+R1)
print("                        |                                |")
print("                        |----------------|---------------|")
print("                                         |")
print("                                      [PC-2]")
print("                                         |")
print("                ("+k2+")")
print("                                         |")
print("(K2) <-----------------------------------|")
print("")
print("")
print("--------------------------------------------------------------------------------------")
print("                                 END OF KEY SECTION")
print("--------------------------------------------------------------------------------------")
print("")
print("")
print("--------------------------------------------------------------------------------------")
print("                              START OF PLAINTEXT SECTION")
print("--------------------------------------------------------------------------------------")
plaintext = "erlangga"
print("                                     \""+plaintext+"\"")
print("                                         |")
print("                                        \|/")
print("                                         v")
plaintext = encodeUTF8(plaintext)
print("          "+plaintext)
print("                                         |")
print("                                        \|/")
print("                                         v")
print("                                        [IP]")
print("                                         |")
print("                        |----------------+---------------|")
print("                        |                                |")
print("                       \|/                              \|/")
print("                        v                                v")
IP = splitBox(initial_permutation(plaintext))
PTL0 = IP[0]
PTR0 = IP[1]
print("          {}    {}".format(PTL0, PTR0))
print("                       L0                               R0")
print("                        |                                |")
print("                        |                                |")
print("                        |     |--------------------------+")
print("                        |     |                          |")
print("                        |     |                         \|/")
print("                        |     |                          v")
print(
    "                        |     |                         [f1] <----------(K1)--------------")
f1 = f(PTR0, k1)
print("                        |     |                          |")
print("                        |     |           " + f1)
print("                        |     |                          |")
print("                        |     |                         \|/")
print("                        |     |                          v")
print("                        |-----)----------------------> [XOR]")
print("                              |                          |")
PTL1 = PTR0
PTR1 = xor(f1, PTL0)
print("                              |           " + PTR1)
print("                              |                          |")
print("                        |-----|                          |")
print("                        |                                |")
print("                       \|/                              \|/")
print("                        v                                v")
print("          {}    {}".format(PTL1, PTR1))
print("                       L1                               R1")
print("                        |                                |")
print("                        |                                +------------------------|")
print("                        |                                |                        |")
print("                        |                               \|/                       |")
print("                        |                                v                        |")
print(
    "                        |                               [f2] <----------(K2)------)-------")
f2 = f(PTR1, k2)
print("                        |                " +
      f2 + "         |")
print("                        |                                |                        |")
print("                        |                                |                        |")
print(
    "                        |------------> [XOR] <-----------|                        |")
print("                                         |                                        |")
print("                                         |                                        |")
print("                                         |               |------------------------|")
print("                        |----------------|               |")
print("                        |                                |")
print("                       \|/                              \|/")
print("                        v                                v")
PTL2 = xor(PTL1, f2)
PTR2 = PTR1
print("          {}    {}".format(PTL2, PTR2))
print("                       L2                               R2")
print("                        |                                |")
print("                        |----------------|---------------|")
print("                                         |")
pre = PTL2 + PTR2
print("            "+(PTL2 + PTR2))
print("                                         |")
print("                                      [IP^-1]")
print("                                         |")
print("                                         |")
print("                                        \|/")
print("                                         v")
ciphertext = final_permutation([PTL2, PTR2])
print("            "+ciphertext)
print("        ", end="")
for i in split8(ciphertext):
    print(i, end=" ")
print()
print("                                      ", end="")
for i in split8(ciphertext):
    print(chr(int("0b"+i, 2)), end="")
print()
print("                                    [CIPHERTEXT]")
